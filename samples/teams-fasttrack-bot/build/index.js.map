{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAA4C,OAAO,EAAE,MAAM,YAAY,CAAC;AAE/E,OAAO,EACH,MAAM,EACN,eAAe,GAElB,MAAM,cAAc,CAAC;AAEtB,MAAM,CAAC,cAAc,kBAAmB,CAAC;AACzC,MAAM,CAAC,SAAS,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;AAExC,MAAM,CAAC,KAAK,CAAC,iBAAiB,kBAAmB,CAAC;AAElD,QAAQ,CAAC,GAAG,CAAC,EAAE;IAEX,MAAM,CAAC,KAAK,CAAC,kCAAkC,kBAAmB,CAAC;IAEnE,yBAAyB;IACzB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE;QACZ,CAAC,OAAO,EAAE,EAAE;YACR,MAAM,CAAC,KAAK,CAAC,aAAa,kBAAmB,CAAC;YAC9C,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QAC5C,CAAC;KACJ,CAAC,CAAC;IAEH,GAAG,CAAC,MAAM,CAAC,gBAAgB,EAAE;QACzB,CAAC,OAAgB,EAAE,EAAE;YACjB,MAAM,CAAC,KAAK,CAAC,0BAA0B,kBAAmB,CAAC;YAC3D,MAAM,OAAO,GAAG,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;YACzD,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,wDAAwD,EAAE,OAAO,CAAC,CAAC;QAC/F,CAAC;QACD,CAAC,OAAgB,EAAE,OAAwC,EAAE,EAAE;YAC3D,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC1C,iCAAiC;gBACjC,QAAQ,SAAS,EAAE;oBACf,KAAK,mBAAmB;wBACpB,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;wBAC3C,MAAM;oBACV,KAAK,iBAAiB;wBAClB,OAAO,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;wBACzC,MAAM;oBACV;wBACI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACnB,MAAM;iBACb;aACJ;QACL,CAAC;KACJ,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { usingBot } from \"./bot\";\r\nimport { Session, IPromptResult, IFindMatchResult, Prompts } from \"botbuilder\";\r\n\r\nimport {\r\n    Logger,\r\n    ConsoleListener,\r\n    LogLevel,\r\n} from \"@pnp/logging\";\r\n\r\nLogger.activeLogLevel = LogLevel.Verbose;\r\nLogger.subscribe(new ConsoleListener());\r\n\r\nLogger.write(\"Entering init()\", LogLevel.Verbose);\r\n\r\nusingBot(bot => {\r\n\r\n    Logger.write(\"init() :: Entering usingBot call\", LogLevel.Verbose);\r\n\r\n    // Entry point of the bot\r\n    bot.dialog(\"/\", [\r\n        (session) => {\r\n            Logger.write(\"init() :: /\", LogLevel.Verbose);\r\n            session.replaceDialog(\"/promptButtons\");\r\n        },\r\n    ]);\r\n\r\n    bot.dialog(\"/promptButtons\", [\r\n        (session: Session) => {\r\n            Logger.write(\"init() :: /promptButtons\", LogLevel.Verbose);\r\n            const choices = [\"Musician Explorer\", \"Musician Search\"];\r\n            Prompts.choice(session, \"How would you like to explore the classical music bot?\", choices);\r\n        },\r\n        (session: Session, results: IPromptResult<IFindMatchResult>) => {\r\n            if (results.response) {\r\n                const selection = results.response.entity;\r\n                // route to corresponding dialogs\r\n                switch (selection) {\r\n                    case \"Musician Explorer\":\r\n                        session.replaceDialog(\"/musicianExplorer\");\r\n                        break;\r\n                    case \"Musician Search\":\r\n                        session.replaceDialog(\"/musicianSearch\");\r\n                        break;\r\n                    default:\r\n                        session.reset(\"/\");\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n    ]);\r\n});\r\n\r\n"]}