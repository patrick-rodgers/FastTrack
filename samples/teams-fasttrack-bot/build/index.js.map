{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAA4C,OAAO,EAAE,MAAM,YAAY,CAAC;AAE/E,OAAO,EACH,MAAM,EACN,eAAe,GAElB,MAAM,cAAc,CAAC;AAEtB,MAAM,CAAC,OAAO;IAEV,MAAM,CAAC,cAAc,kBAAmB,CAAC;IACzC,MAAM,CAAC,SAAS,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;IAExC,MAAM,CAAC,KAAK,CAAC,iBAAiB,kBAAmB,CAAC;IAElD,QAAQ,CAAC,GAAG,CAAC,EAAE;QAEX,MAAM,CAAC,KAAK,CAAC,kCAAkC,kBAAmB,CAAC;QAEnE,yBAAyB;QACzB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE;YACZ,CAAC,OAAO,EAAE,EAAE;gBACR,MAAM,CAAC,KAAK,CAAC,aAAa,kBAAmB,CAAC;gBAC9C,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAC5C,CAAC;SACJ,CAAC,CAAC;QAEH,GAAG,CAAC,MAAM,CAAC,gBAAgB,EAAE;YACzB,CAAC,OAAgB,EAAE,EAAE;gBACjB,MAAM,CAAC,KAAK,CAAC,0BAA0B,kBAAmB,CAAC;gBAC3D,MAAM,OAAO,GAAG,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;gBACzD,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,wDAAwD,EAAE,OAAO,CAAC,CAAC;YAC/F,CAAC;YACD,CAAC,OAAgB,EAAE,OAAwC,EAAE,EAAE;gBAC3D,IAAI,OAAO,CAAC,QAAQ,EAAE;oBAClB,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC1C,iCAAiC;oBACjC,QAAQ,SAAS,EAAE;wBACf,KAAK,mBAAmB;4BACpB,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;4BAC3C,MAAM;wBACV,KAAK,iBAAiB;4BAClB,OAAO,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;4BACzC,MAAM;wBACV;4BACI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACnB,MAAM;qBACb;iBACJ;YACL,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { usingBot } from \"./bot\";\r\nimport { Session, IPromptResult, IFindMatchResult, Prompts } from \"botbuilder\";\r\n\r\nimport {\r\n    Logger,\r\n    ConsoleListener,\r\n    LogLevel,\r\n} from \"@pnp/logging\";\r\n\r\nexport default function init() {\r\n\r\n    Logger.activeLogLevel = LogLevel.Verbose;\r\n    Logger.subscribe(new ConsoleListener());\r\n\r\n    Logger.write(\"Entering init()\", LogLevel.Verbose);\r\n\r\n    usingBot(bot => {\r\n\r\n        Logger.write(\"init() :: Entering usingBot call\", LogLevel.Verbose);\r\n\r\n        // Entry point of the bot\r\n        bot.dialog(\"/\", [\r\n            (session) => {\r\n                Logger.write(\"init() :: /\", LogLevel.Verbose);\r\n                session.replaceDialog(\"/promptButtons\");\r\n            },\r\n        ]);\r\n\r\n        bot.dialog(\"/promptButtons\", [\r\n            (session: Session) => {\r\n                Logger.write(\"init() :: /promptButtons\", LogLevel.Verbose);\r\n                const choices = [\"Musician Explorer\", \"Musician Search\"];\r\n                Prompts.choice(session, \"How would you like to explore the classical music bot?\", choices);\r\n            },\r\n            (session: Session, results: IPromptResult<IFindMatchResult>) => {\r\n                if (results.response) {\r\n                    const selection = results.response.entity;\r\n                    // route to corresponding dialogs\r\n                    switch (selection) {\r\n                        case \"Musician Explorer\":\r\n                            session.replaceDialog(\"/musicianExplorer\");\r\n                            break;\r\n                        case \"Musician Search\":\r\n                            session.replaceDialog(\"/musicianSearch\");\r\n                            break;\r\n                        default:\r\n                            session.reset(\"/\");\r\n                            break;\r\n                    }\r\n                }\r\n            },\r\n        ]);\r\n    });\r\n}\r\n"]}