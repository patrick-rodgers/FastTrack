{"version":3,"file":"bot.js","sourceRoot":"","sources":["../src/bot.ts"],"names":[],"mappings":"AACA,OAAO,EACH,YAAY,EACZ,gBAAgB,EAChB,UAAU,GACb,MAAM,YAAY,CAAC;AAEpB,OAAO,EACH,kBAAkB,GACrB,MAAM,kBAAkB,CAAC;AAE1B,OAAO,EACH,YAAY,GACf,MAAM,SAAS,CAAC;AAEjB,OAAO,EACH,MAAM,GAET,MAAM,cAAc,CAAC;AAEtB,IAAI,WAAW,GAAiC,IAAI,CAAC;AAIrD;IAEI,MAAM,CAAC,KAAK,CAAC,mBAAmB,kBAAmB,CAAC;IAEpD,IAAI,WAAW,KAAK,IAAI,EAAE;QAEtB,MAAM,CAAC,KAAK,CAAC,6CAA6C,kBAAmB,CAAC;QAE9E,WAAW,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAElC,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC;gBACrC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;gBACjC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB;aAChD,CAAC,CAAC;YAEH,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC;YAExC,mBAAmB;YACnB,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,gBAAgB,EAAE,CAAC,CAAC;YAE3C,uBAAuB;YACvB,MAAM,MAAM,GAAG,YAAY,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE;gBACpC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,iBAAiB,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;YAEjD,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAE7E,MAAM,CAAC,KAAK,CAAC,uCAAuC,eAAgB,CAAC;YAErE,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;KACN;IAED,MAAM,CAAC,KAAK,CAAC,mCAAmC,kBAAmB,CAAC;IAEpE,OAAO,WAAW,CAAC;AACvB,CAAC;AAED,MAAM,mBAAmB,IAAiB;IAEtC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC","sourcesContent":["\r\nimport {\r\n    UniversalBot,\r\n    MemoryBotStorage,\r\n    Middleware,\r\n} from \"botbuilder\";\r\n\r\nimport {\r\n    TeamsChatConnector,\r\n} from \"botbuilder-teams\";\r\n\r\nimport {\r\n    createServer,\r\n} from \"restify\";\r\n\r\nimport {\r\n    Logger,\r\n    LogLevel,\r\n} from \"@pnp/logging\";\r\n\r\nlet _botPromise: Promise<UniversalBot> | null = null;\r\n\r\nexport type BotDelegate = (b: UniversalBot) => void;\r\n\r\nfunction getBot(): Promise<UniversalBot> {\r\n\r\n    Logger.write(\"Entering getBot()\", LogLevel.Verbose);\r\n\r\n    if (_botPromise === null) {\r\n\r\n        Logger.write(\"getBot() :: Bot promise is null, returning.\", LogLevel.Verbose);\r\n\r\n        _botPromise = new Promise((resolve) => {\r\n\r\n            const connector = new TeamsChatConnector({\r\n                appId: process.env.MicrosoftAppId,\r\n                appPassword: process.env.MicrosoftAppPassword,\r\n            });\r\n\r\n            const bot = new UniversalBot(connector);\r\n\r\n            // TODO:: testing??\r\n            bot.set(\"storage\", new MemoryBotStorage());\r\n\r\n            // Setup Restify Server\r\n            const server = createServer();\r\n            server.listen(process.env.port || 3978, function () {\r\n                console.log(`${server.name} listening to ${server.url}`);\r\n            });\r\n            server.post(\"/api/messages\", connector.listen());\r\n\r\n            bot.use(Middleware.dialogVersion({ version: 0.2, resetCommand: /^reset/i }));\r\n\r\n            Logger.write(\"getBot() :: Created new bot instance.\", LogLevel.Info);\r\n\r\n            resolve(bot);\r\n        });\r\n    }\r\n\r\n    Logger.write(\"getBot() :: Returning bot promise\", LogLevel.Verbose);\r\n\r\n    return _botPromise;\r\n}\r\n\r\nexport function usingBot(func: BotDelegate): void {\r\n\r\n    getBot().then(b => func(b));\r\n}\r\n"]}